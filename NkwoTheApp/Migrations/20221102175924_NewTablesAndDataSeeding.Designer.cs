// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NkwoTheApp.Persistence.Context;

#nullable disable

namespace NkwoTheApp.Migrations
{
    [DbContext(typeof(NkwoTheAppContext))]
    [Migration("20221102175924_NewTablesAndDataSeeding")]
    partial class NewTablesAndDataSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NkwoTheApp.Domain.Models.ADDRESS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            City = "Enugu",
                            Country = "Nigeria",
                            Region = "South-East",
                            Street = "Nza Street",
                            StreetNumber = "24"
                        },
                        new
                        {
                            Id = new Guid("1246b007-018b-4028-aff8-dcc4bd1aec68"),
                            City = "Kyiv",
                            Country = "Ukraine",
                            Region = "Donbas",
                            Street = "Spazosevic",
                            StreetNumber = "1213"
                        });
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.BUYER", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegistrationStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Buyer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2dc01af8-ffc3-4468-b80d-38d6fef11b34"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegistrationStatus = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a")
                        });
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.CART", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.PRICE_OFFER", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("decimal(20,8)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PromotionalText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("PriceOffer");
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.PRODUCT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductDetailsId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("26b7667c-90c9-47b5-a722-3182fb32d599"),
                            Category = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "IPhone 14",
                            ProductDetailsId = new Guid("dbca4d53-cbff-4847-8ada-859eca4f7b93"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b7dffa97-da56-4cbb-b5b3-93de39f0e06c"),
                            Category = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rechargeable Lantern",
                            ProductDetailsId = new Guid("f1592f94-4b9b-4515-90c4-31ef858dfcfa"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("deb46b24-6a60-4f9a-90f7-6f9d3314cb60"),
                            Category = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Headphone",
                            ProductDetailsId = new Guid("0d034c9b-8e63-4838-af27-b13be57d1457"),
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.PRODUCT_DETAILS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(20,8)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("SellerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShopName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("StoreProduct");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dbca4d53-cbff-4847-8ada-859eca4f7b93"),
                            CreatedAt = new DateTime(2022, 11, 2, 18, 59, 23, 441, DateTimeKind.Local).AddTicks(1915),
                            Price = 1045.00m,
                            Quantity = 40,
                            SellerId = new Guid("1a859ecc-f1cd-422e-9130-bb73d68f86d9"),
                            ShopName = "Agamemnon And Sons",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f1592f94-4b9b-4515-90c4-31ef858dfcfa"),
                            CreatedAt = new DateTime(2022, 11, 2, 18, 59, 23, 441, DateTimeKind.Local).AddTicks(1925),
                            Price = 50.00m,
                            Quantity = 50,
                            SellerId = new Guid("1a859ecc-f1cd-422e-9130-bb73d68f86d9"),
                            ShopName = "Agamemnon And Sons",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0d034c9b-8e63-4838-af27-b13be57d1457"),
                            CreatedAt = new DateTime(2022, 11, 2, 18, 59, 23, 441, DateTimeKind.Local).AddTicks(1928),
                            Price = 90.00m,
                            Quantity = 500,
                            SellerId = new Guid("1a859ecc-f1cd-422e-9130-bb73d68f86d9"),
                            ShopName = "Agamemnon And Sons",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.SELLER", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegistrationStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Seller");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a859ecc-f1cd-422e-9130-bb73d68f86d9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegistrationStatus = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("315947fe-0a5b-4f4d-bb3d-688306b475ab")
                        });
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.USER", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonType")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferralCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistrationStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            AddressId = new Guid("1246b007-018b-4028-aff8-dcc4bd1aec68"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "iberia@gmail.com",
                            FirstName = "Marinko",
                            Gender = 1,
                            LastName = "Spazevovic",
                            PersonType = 1,
                            PhoneNumber = "+21-345-4567-987",
                            RegistrationStatus = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "iberia"
                        },
                        new
                        {
                            Id = new Guid("315947fe-0a5b-4f4d-bb3d-688306b475ab"),
                            AddressId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "tochukwusage@gmail.com",
                            FirstName = "Tochukwu",
                            Gender = 1,
                            LastName = "Nwokolo",
                            PersonType = 2,
                            PhoneNumber = "+234-706-5432-123",
                            RegistrationStatus = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "tochukwusage"
                        });
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.BUYER", b =>
                {
                    b.HasOne("NkwoTheApp.Domain.Models.USER", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.CART", b =>
                {
                    b.HasOne("NkwoTheApp.Domain.Models.BUYER", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NkwoTheApp.Domain.Models.PRODUCT", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Buyer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.PRICE_OFFER", b =>
                {
                    b.HasOne("NkwoTheApp.Domain.Models.PRODUCT", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.PRODUCT", b =>
                {
                    b.HasOne("NkwoTheApp.Domain.Models.PRODUCT_DETAILS", "ProductDetails")
                        .WithMany()
                        .HasForeignKey("ProductDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductDetails");
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.PRODUCT_DETAILS", b =>
                {
                    b.HasOne("NkwoTheApp.Domain.Models.SELLER", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.SELLER", b =>
                {
                    b.HasOne("NkwoTheApp.Domain.Models.USER", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NkwoTheApp.Domain.Models.USER", b =>
                {
                    b.HasOne("NkwoTheApp.Domain.Models.ADDRESS", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
